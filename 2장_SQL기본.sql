--25.07.14  2장 sql기본
--  실습1.2 NUMBER 자료형 이해

CREATE TABLE TYPE_TEST_NUMBER(
    num1 NUMBER,
    num2 NUMBER(2),
    num3 NUMBER(3, 1),
    num4 NUMBER(4, 2),
    num5 NUMBER(5, 6),
    num6 NUMBER(6, -1)
    );
    
INSERT INTO TYPE_TEST_NUMBER (num1) VALUES (1);
INSERT INTO TYPE_TEST_NUMBER (num1) VALUES (123);
INSERT INTO TYPE_TEST_NUMBER (num1) VALUES (123.45);
INSERT INTO TYPE_TEST_NUMBER (num1) VALUES (123.12345);

//NUM2 NUMBER(2)
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (1.2);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (1.23);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12.12312);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12.42313);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12.22222);
INSERT INTO TYPE_TEST_NUMBER (num2) VALUES (12.2222);

//NUM3 NUMBER(3,1)
INSERT INTO TYPE_TEST_NUMBER (num3) VALUES (12);
INSERT INTO TYPE_TEST_NUMBER (num3) VALUES (31);
INSERT INTO TYPE_TEST_NUMBER (num3) VALUES (12.3);
INSERT INTO TYPE_TEST_NUMBER (num3) VALUES (12.1234);
INSERT INTO TYPE_TEST_NUMBER (num3) VALUES (12.51231);

//num6 NUMBER(6, -1)
INSERT INTO TYPE_TEST_NUMBER (num6) VALUES (1232.1234);
//num5 NUMBER(5, 6)
INSERT INTO TYPE_TEST_NUMBER (num6) VALUES (555.555);

CREATE TABLE TYPE_TEST_CHAR (
    char1 CHAR(1),
    char2 CHAR(2),
    char3 CHAR(3),
    vchar1 CHAR(1),
    vchar2 CHAR(2),
    vchar3 CHAR(3),
    nvchar1 CHAR(1),
    nvchar2 CHAR(2),
    nvchar3 CHAR(3));
    
INSERT INTO TYPE_TEST_CHAR (char1) VALUES ('A');



--실습하기 1.4 테이블 생성
CREATE TABLE USER1 (
    USER_ID VARCHAR2(20),
    NAME VARCHAR2(20),
    HP CHAR(13),
    AGE NUMBER);

// 실습하기 1.5
INSERT INTO USER1 VALUES ('A101', '김김김', '010-1234-1234',25);
INSERT INTO USER1 VALUES ('A102', '김나나', '010-1242-1134',15);
INSERT INTO USER1(USER_ID, NAME, AGE) VALUES ('A103', '장보고', 02);
INSERT INTO USER1(USER_ID, NAME, HP) VALUES ('A104', '이보고', '111-1111-1111');
INSERT INTO USER1(USER_ID, NAME, AGE) VALUES ('A103', '장보고', '111-1111-1111');

// 실습하기 1.6
SELECT * FROM USER1;
SELECT * FROM USER1 WHERE USER_ID = 'A101';
SELECT * FROM USER1 WHERE AGE > 20 ;
SELECT USER_ID, NAME, AGE FROM USER1;

//실습하기 1.7
UPDATE USER1 SET HP='010-2323-2331' WHERE USER_ID = 'A103';
UPDATE USER1 SET AGE = 21 WHERE user_id = 'A104' ;

// 1.8
DELETE FROM USER1 WHERE USER_ID = 'A101';
DELETE FROM USER1 WHERE USER_ID = 'A103' AND AGE = 2;
DELETE FROM USER1 WHERE AGE >= 5;
------------------
//2.1 제약조건
CREATE TABLE USER2 (
    USER_ID VARCHAR2(20) PRIMARY KEY,NAME VARCHAR2(20),HP CHAR(13),AGE NUMBER(2));
    
    //PK 중복X
    INSERT INTO USER2 VALUES('A101','김유신','010-1234-1234', 23);
    INSERT INTO USER2 VALUES('A102','김춘추','010-1234-2222', 21);
    
//2.2 
CREATE TABLE USER3(USER_ID VARCHAR2(20) PRIMARY KEY,
    NAME VARCHAR2(20),
    HP CHAR(13) UNIQUE,
    AGE NUMBER(3));
    
    INSERT INTO USER3 VALUES ('A101','김유신','010-1111-1111', 22);
    INSERT INTO USER3 VALUES ('A102','김신','010-1112-1111', 21);
    
    // 실습하기
CREATE TABLE PARENT(
    pid VARCHAR2(20) PRIMARY KEY, 
    NAME VARCHAR2(20), 
    hp CHAR(13) UNIQUE
    );

CREATE TABLE CHILD(
    CID VARCHAR2(20) PRIMARY KEY, NAME VARCHAR2(20), hp CHAR(13) UNIQUE,
    PARENT VARCHAR2(20), FOREIGN KEY (PARENT) REFERENCES PARENT (PID));
    
INSERT INTO PARENT VALUES ('P101','김서현','010-1234-1001');
INSERT INTO PARENT VALUES ('P102','이성계','010-1234-1002');
INSERT INTO PARENT VALUES ('P103','심사임당','010-1234-1003');

INSERT INTO CHILD VALUES ('C101','김유신','010-1234-2001', 'P101');
INSERT INTO CHILD VALUES ('C102','이방우','010-1234-2002','P102');
INSERT INTO CHILD VALUES ('C103','이방원','010-1234-2003','P102');
//부모 테이블에 P105에 해당하는 값이 없기 때문에 참조 무결성 제약조건 위배
INSERT INTO CHILD VALUES ('C104','이이','010-1234-2004','P103');
    
//2.4
CREATE TABLE USER4(
    NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(1) NOT NULL,
    AGE NUMBER(2) DEFAULT 1,
    ADDR VARCHAR2(255));
    
INSERT INTO USER4 VALUES('김유신','M',23,'김해시');
INSERT INTO USER4 VALUES('김춘추','M',21,'경주시');
INSERT INTO USER4 (NAME, GENDER, ADDR) VALUES('심사임당','F','강릉시');
INSERT INTO USER4 (NAME, GENDER ) VALUES('이순신','M');
INSERT INTO USER4 (NAME, AGE ) VALUES('정약용',33);    //성별은 NOT NULL이기 때문에 해당쿼리 에러
    
    // 2.4
CREATE TABLE USER5(
    NAME VARCHAR2(20) NOT NULL,
    GENDER CHAR(1) NOT NULL CHECK (GENDER IN ('M','F')),
    AGE INT DEFAULT 1 CHECK (AGE > 0 AND AGE <100),
    ADDR VARCHAR2(255));
DROP TABLE USER5;   
INSERT INTO USER5 VALUES('김유신','M',23,'김해시');
INSERT INTO USER5 VALUES('김춘추','M',21,'경주시');
INSERT INTO USER5 (NAME, GENDER, ADDR) VALUES('심사임당','F','강릉시');
INSERT INTO USER5 (NAME, GENDER ) VALUES('이순신','M');
INSERT INTO USER5 (NAME, AGE ) VALUES('정약용',33);


// 실습하기 2.5 : IDENTTY

CREATE TABLE USER7(
    ID  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME    VARCHAR2(20),
    AGE NUMBER,
    EMAIL VARCHAR2(100));
    
    INSERT INTO USER7 (NAME, AGE, EMAIL) VALUES ('김유신', 25, 'kim@gmail.com');
    INSERT INTO USER7 (NAME, AGE, EMAIL) VALUES ('장보고', 35, 'jang@gmail.com');
    INSERT INTO USER7 (NAME, AGE, EMAIL) VALUES ('이순신', 45, 'lee@gmail.com');
    
    select * from user7;
    